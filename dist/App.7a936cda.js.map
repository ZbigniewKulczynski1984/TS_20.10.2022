{"version":3,"sources":["Exchanger.ts","App.ts"],"names":[],"mappings":";;;;;ACAA,ADAA,ICAA,ADAA,SAAA,ECAA,CDAA,ECAA,OAAA,CAAA,GDAA,UCAA,CAAA,CDAA;ACEA,EDII,SAAA,MCJa,EAAE,CDIf,CAAY,IAAY,EAAE,MAAc,EAAE,MAAc,EAAA;ACF5D,IDGQ,IAAI,CCHH,ADGI,IAAI,GAAG,IAAI,MCHE,GAAA;EAEtB,EDEI,ECFE,EDEE,CCFC,ADEA,GCFuB,GDEjB,GAAG,ECFsB,CAAC,GDEjB,WCF+B,CAAC,UAAU,CAAC;EACnE,EDEI,ECFE,EDEE,CAAC,MAAM,CCFC,EDEE,CCFqB,KDEf,GCFuB,CAAC,cAAc,CAAC,QAAQ,CAAC;EAExE,ADCA,ICDM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAI,EAAW,EAAA;EDGjC,ECFH,IAAM,GDEH,CAAA,GCFU,GAAuB,GDEjC,CAAA,ICFyC,CAAC,GDElC,GAAf,QCF+D,CAAC,EAAE,CAAC,ADEnE;ICAI,ADCA,ICDI,ADCE,OCDK,IAAI,CDCG,GCDC,ADCG,ICDC,ADCG,CAAC,IAAI,ECDD,CDCI,EAAE,GAAI,EAAE,ICDA,gBAAgB,EAAE;IDE5D,ECDI,EDCE,KCDK,OAAO,CAAC,CDCC,GAAG,IAAI,CAAC,ICDI,EDCE,GAAG,EAAE;IACvC,CCDC,MACI,ADAE,YAAY,GAAG,cAAc,GAAG,IAAI,CAAC,MAAM;EACtD,CAAC,GCAO,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC;EDCjE,OAAA,SAAC;AAAD,CAjBA,CCkBI,CAAC,ADlBL;AAAa,ECoBT,IAAI,CDpBK,CAAA,CCoBF,KAAK,GDpBH,CCoBO,EAAE,ADpBT,SAAA;ICqBL,IAAI,GAAG,YAAY,iBAAiB,EAAE;MAClC,GAAG,CAAC,gBAAgB,CAAU,OAAO,EAAE,UAAC,KAAiB,EAAA;QACrD,KAAK,CAAC,cAAc,EAAE;QACtB,KAAK,CAAC,eAAe,EAAE;QACvB,IAAM,EAAE,GAAc,IAAI,WAAA,CAAA,SAAS,CAC/B,mBAAmB,CAAC,MAAM,CAAC,EAC3B,mBAAmB,CAAC,QAAQ,CAAC,EAC7B,mBAAmB,CAAC,QAAQ,CAAC,CAChC;QACD,IAAI,UAAU,KAAK,IAAI,EAAE;UACrB,UAAU,CAAC,SAAS,GAAI,EAAA,GAAG,EAAE,CAAC,QAAQ,EAAK;;MAEnD,CAAC,CAAC;KACL,MACI;MACD,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC;;GAEnE,MACI;IACD,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;;AAExD","file":"App.7a936cda.js","sourceRoot":"..","sourcesContent":["export class Exchanger {\r\n\r\n    private gold: number;\r\n    private silver: number;\r\n    private copper: number;\r\n\r\n    constructor(gold: number, silver: number, copper: number) {\r\n        this.gold = gold;\r\n        this.silver = silver;\r\n        this.copper = copper;\r\n    }\r\n\r\n    public toCopper(): number {\r\n        const goldToCopper = (this.gold * 20) * 12;\r\n        const silverToCopper = this.silver * 12;\r\n        return goldToCopper + silverToCopper + this.copper;\r\n    }\r\n}","import { Exchanger } from './Exchanger';\r\n\r\ninitEventListener();\r\n\r\nfunction initEventListener() {\r\n\r\n    const btn: HTMLElement | null = document.getElementById(\"exchange\");\r\n    const resultText: HTMLElement | null = document.getElementById(\"result\");\r\n\r\n    const getInputNumberValue = (id : string) : number => {\r\n        const element: HTMLElement | null = document.getElementById(id);\r\n\r\n        if (element != null && element instanceof HTMLInputElement) {\r\n            return element.valueAsNumber;\r\n        }\r\n        else {\r\n            throw new Error(`HTML element is null or wrong type`);\r\n        }\r\n    }\r\n\r\n    if (btn !== null) {\r\n        if (btn instanceof HTMLButtonElement) {\r\n            btn.addEventListener<\"click\">(\"click\", (event: MouseEvent) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const ex: Exchanger = new Exchanger(\r\n                    getInputNumberValue(\"gold\"),\r\n                    getInputNumberValue(\"silver\"),\r\n                    getInputNumberValue(\"copper\")\r\n                );\r\n                if (resultText !== null) {\r\n                    resultText.innerText = (`${ex.toCopper()}`);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            throw new Error(`HTML element for exchange is not a button`);\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(`Button for exchange not found`);\r\n    }\r\n}"]}